@page "/bookCategories/{id:int}/update"
@using Services.BookCategories.Models
@using Services.BookCategories
@using Services.Metadata
@inject IBookCategoryService service
@inject NavigationManager navigationManager

<h3>教材</h3>

<p>修改教材信息。<a href="/bookCategories" class="btn btn-outline-primary" data-mdb-ripple-init>返回</a></p>

<hr class="hr" />

<EditForm Model="@Model" OnValidSubmit="@Submit" FormName="UpdateBookCategory">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="gy-5">
        <div class="col-md-5">
            <label class="form-label">教材版本：</label>
            <InputText @bind-Value="Model!.CategoryName" class="form-control rounded" />
        </div>
        <div class="col-md-5">
            <label class="form-label">出版年份：</label>
            <select @bind="Model.Year" class="form-select">
                @foreach (var year in Years)
                {
                    <option value="@year">@year</option>
                }
            </select>
        </div>
        <div class="col-md-5">
            <label class="form-label">年级：</label>
            <select @bind="Model.Grade" class="form-select">
                @foreach (var grade in Grades)
                {
                    <option value="@grade">@grade</option>
                }
            </select>
        </div>
        <div class="col-md-5">
            <label class="form-label">学期：</label>
            <select @bind="Model.Semester" class="form-select">
                @foreach (var semester in Semesters)
                {
                    <option value="@semester">@semester</option>
                }
            </select>
        </div>
    </div>
    <div class="col-md-5">
        <label class="form-label"></label>
        <button type="submit" class="form-control btn btn-outline-primary" data-mdb-ripple-init>保存</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public int id { get; set; }

    [SupplyParameterFromForm]
    public AddBookCategoryModel Model { get; set; }

    public string[] Grades;
    public string[] Semesters;
    public int[] Years;

    public Update()
    {
        Grades = MetadataService.GetDefaultGrades();
        Semesters = MetadataService.GetDefaultSemesters();
        Years = MetadataService.GetDefaultYears();
        Model = MetadataService.GetDefaultBookCategory();
    }

    protected override async void OnInitialized()
    {
        var category = await service.GetByIdAsync(id);
        Model = new AddBookCategoryModel()
            {
                CategoryName = category.CategoryName,
                Grade = category.Grade,
                Semester = category.Semester,
                Year = category.Year,
            };

    }

    private async Task Submit()
    {
        await service.UpdateAsync(id, Model);
        navigationManager.NavigateTo("/bookCategories");
    }
}