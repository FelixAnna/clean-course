@page "/books/{bookId:int}/words/add"
@using Services.Books
@using Services.Words
@using Services.Words.Models
@using Services.Metadata
@inject AppState appState
@inject IWordBatchService importService
@inject IBookService bookService
@inject NavigationManager navigationManager

<h3>词条</h3>

<p>
    为当前课本添加词条。
    <a href="/books/@(bookId)/words/import" class="btn btn-outline-primary" data-mdb-ripple-init>导入</a>
</p>
<hr class="hr" />
<EditForm Model="@Model" OnValidSubmit="@Submit" FormName="AddWord">
    <DataAnnotationsValidator />
    <ValidationSummary />
    
    <table class="table">
        <tr class="form-group">
            <td class="m-2">
                <label class="form-label">
                    课本：
                </label>
                <span class="text-primary"><a href="/books/@bookId/info" class="text-info">@Model.BookName</a></span>
            </td>
        </tr>
        <tr class="form-group">
            <td class="m-2">
                <label class="form-label">词条：</label>
                <InputText @bind-Value="Model!.Content" class="form-control rounded" />
            </td>
            <td>
                <label class="form-label">备注：</label>
                <InputText @bind-Value="Model!.Explanation" class="form-control rounded" />
            </td>
        </tr>
        <tr class="form-group">
            <td class="m-2">
                <label class="form-label">详细描述：</label>
                <textarea @bind="Model!.Details" class="form-control rounded" rows="8" placeholder="选填内容" />
            </td>
        </tr>
        <tr class="form-group">
            <td>
                <label class="form-label">
                    单元：
                </label>
                <select @bind="Model.Unit" class="form-select">
                    @foreach (var unit in Units)
                    {
                        <option value="@unit.Key">第@(unit.Value)课</option>
                    }
                </select>
            </td>
            <td>
                <label class="form-label">
                    来源：
                </label>
                <select @bind="Model.Source" class="form-select">
                    @foreach (var source in Sources)
                    {
                        <option value="@source">@(source)</option>
                    }
                </select>
            </td>
        </tr>
        <tr class="form-group">
            <td class="m-2">
                <label class="form-label">
                    重复处理：
                </label>
                <select @bind="Model.Overwrite" class="form-select">
                    @foreach (var option in DuplicateOptions)
                    {
                        <option value="@option.Key">@option.Value</option>
                    }
                </select>
            </td>
            <td class="m-2">
                <label class="form-label"></label>
                <button type="submit" class="form-control btn btn-outline-primary m-2" data-mdb-ripple-init>保存</button>
            </td>
        </tr>
    </table>
</EditForm>

@code {
    [Parameter]
    public int bookId { get; set; }

    [SupplyParameterFromForm]
    public AddWordModel Model { get; set; }

    private Dictionary<string, string> DuplicateOptions;
    private Dictionary<int, string> Units;
    private string[] Sources;

    public Add()
    {
        Units = MetadataService.GetDefaultUnits().Where(x => x.Key > 0).ToDictionary();
        DuplicateOptions = MetadataService.GetDefaultDuplicateOption();
        Sources = MetadataService.GetDefaultSources();
    }

    protected override async void OnInitialized()
    {
        var book = await bookService.GetByIdAsync(bookId);
        Model = new AddWordModel()
        {
            BookId = bookId,
            BookName = book.FriendlyName,
            Unit = Units.First().Key,
            Overwrite = DuplicateOptions.First().Key,
            Source = Sources.First()
        };
    }

    private async Task Submit()
    {
        await importService.AddWordAsync(Model);
        navigationManager.NavigateTo($"/books/{bookId}/words");
    }
}