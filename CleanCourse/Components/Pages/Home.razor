@page "/"

@using Services.Kids
@using Services.Kids.Models
@using Services.BookCategories
@using Services.BookCategories.Models
@using Services.Metadata
@using Shared
@using System.IO
@inject IJSRuntime JS
@inject IBookCategoryService categoryService
@inject IKidService kidService
@inject IJSRuntime JSRuntime
@inject AppState appState

<h3>我的</h3>

<p>好好学习，劳逸结合。</p>
<hr class="hr" />
@if (string.IsNullOrEmpty(kidName) || string.IsNullOrEmpty(bookCategoryFullName))
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="row gy-3 pe-1">
        <tr class="form-group">
            <td>
                <label class="col-form-label">已选宝宝：</label>
            </td>
            <td>
                <div class="col-form-label">
                    <a href="/kids" class="link-primary"> @(kidName)</a>
                </div>
            </td>
        </tr>
        <tr class="form-group">
            <td>
                <label class="col-form-label">已选教程：</label>
            </td>
            <td>
                <div class="col-form-label">
                    <a href="/bookCategories" class="link-primary "> @(bookCategoryFullName)</a>
                </div>
            </td>
        </tr>
        <tr class="form-group">
            <td>
                <label class="col-form-label"></label>
            </td>
            <td>
                <div class="col-form-label">
                    <a href="/settings" class="btn btn-outline-primary">更多设置</a>
                </div>
            </td>
        </tr>
        <tr class="form-group">
            <td>
                <label class="col-form-label"></label>
            </td>
            <td>
                <div class="col-form-label">
                        * 首次使用请先<a href="/books/add" class="link-primary">创建课本</a>，
                        然后点击<b>字库</b>，再按提示下载字库并导入数据。
                        然后<a href="/bookCategories/add" class="link-primary">创建教材</a>，
                        然后点击<b>管理课本</b>，根据提示管理课本，即可开始使用。
                </div>
            </td>
        </tr>
    </table>
}
@code {
    private string kidName;
    private string bookCategoryFullName;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            KidModel kid;
            BookCategoryModel category;
            if (appState.KidId <= 0)
            {
                kid = await kidService.GetDefaultAsync();

                appState.KidId = kid.Id;
                appState.KidName = kid.Name;
            }

            if (appState.BookCategoryId <= 0)
            {
                category = await categoryService.GetDefaultAsync();
                appState.BookCategoryFullName = category.BookCategoryFullName;
                appState.BookCategoryId = category.Id;
            }
        }catch(Exception ex)
        {
            Console.WriteLine(ex);
            appState.KidId = -1;
            appState.KidName = appState.KidName?? "设置";
            appState.BookCategoryFullName = appState.BookCategoryFullName??"设置";
            appState.BookCategoryId = -1;
        }
        finally
        {
            kidName = appState.KidName;
            bookCategoryFullName = appState.BookCategoryFullName;
        }
    }
}