@page "/history/export"
@using Services.CheckingHistories;
@using Services.BookCategories
@using Services.Metadata;
@using Services.CheckingHistories.Services;
@using Services.CheckingHistories.Models;
@inject AppState appState
@inject IWordHistoryBatchService service
@inject IBookCategoryService categoryService
@inject NavigationManager navigationManager


<h3>单词/词语</h3>

<p>批量导出单词/词语的检查记录。<a href="/words" class="btn btn-outline-primary" data-mdb-ripple-init>返回</a></p>
<hr class="hr" />
<EditForm Model="@Model" OnValidSubmit="@Submit" FormName="ImportHistory">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <table class="table">
        <tr class="form-group">
            <td class="m-2">
                <label class="form-label">
                    教材：
                </label>
                <select @bind="Model.SharedCode" class="form-select">
                    @foreach (var course in Categories)
                    {
                        <option value="@course.Key">@course.Value</option>
                    }
                </select>
            </td><td>
                <label class="form-label"></label>
                <button type="submit" class="form-control btn btn-outline-primary m-1" data-mdb-ripple-init>
                    保存
                </button>
            </td>
        </tr>
    </table>
    <div class="form-group">
        <label class="form-label">单词/词语的历史记录：</label>
        <textarea @bind="Content" class="form-control rounded" rows="8" cols="100" placeholder="导出的结果会在这里，可以直接粘贴到Excel 或 CSV文件里" />
    </div>
</EditForm>
@code {

    [SupplyParameterFromForm]
    public ExportCheckingHistoryCriteria Model { get; set; }

    private Dictionary<string, string> Categories;
    private string Content;

    public Export()
    {
        Categories = new Dictionary<string, string>();
    }

    protected override async Task OnInitializedAsync()
    {
        Categories = new Dictionary<string, string>()
        {
            {"", "全部" },
        };

        var categories = (await categoryService.GetAllAsync()).Categories.ToList();
        foreach (var cat in categories)
        {
            Categories.Add(cat.SharedCode, cat.BookCategoryFullName);
        }

        Model = new ExportCheckingHistoryCriteria()
            {
                SharedCode = appState.SharedCode,
                KidId = appState.KidId,
            };
    }

    private async Task Submit()
    {
        Content = await service.ExportCheckingStatusAsync(Model);
    }
}